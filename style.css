/* 
CSS RESET AND BASIC STYLES REQUIREMENTS:
- Universal reset for consistent cross-browser styling
- Smooth scrolling behavior
- Base typography and color scheme
- Container class for consistent max-width and centering

TOPICS TO UNDERSTAND:
- CSS reset techniques
- Box-sizing border-box
- CSS custom properties (variables)
- Typography fundamentals
- Color theory and contrast
- Container patterns for responsive design
*/
/* Reset and Basic Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
    Ubuntu, Cantarell, sans-serif;
  color: #1a202c;
  overflow-x: hidden;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 24px;
}

/* 
NAVIGATION STYLES REQUIREMENTS:
- Sticky positioning for persistent navigation
- Backdrop filter for modern glass effect
- Flexbox layout for navigation items
- Gradient text effects for branding
- Hover states and transitions

TOPICS TO UNDERSTAND:
- CSS positioning (sticky)
- Backdrop filters and modern CSS effects
- Flexbox for horizontal layouts
- CSS gradients and text effects
- Hover states and transitions
- Z-index and stacking context
*/
/* Navigation */
nav {
  padding: 24px 0;
  position: sticky;
  top: 0;
  width: 100%;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  z-index: 100;
  border-bottom: 1px solid rgba(100, 21, 255, 0.1);
}

.nav-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo {
  font-size: 28px;
  font-weight: 900;
  background: linear-gradient(135deg, #2563eb 0%, #f59e0b 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.nav-links {
  display: flex;
  gap: 32px;
  align-items: center;
}

.nav-links a {
  text-decoration: none;
  font-weight: 600;
  transition: color 0.3s ease;
}

.nav-links a:hover {
  color: #2563eb;
}

/* 
BUTTON STYLES REQUIREMENTS:
- Consistent button design system
- Multiple button variants (primary, secondary, white)
- Hover effects and transitions
- Accessibility considerations
- Reusable component patterns

TOPICS TO UNDERSTAND:
- CSS design systems and component patterns
- Multiple class selectors
- CSS transitions and transforms
- Button accessibility
- Color contrast ratios
- Reusable CSS patterns
*/
/* Button Styles */
.btn-primary, .btn-secondary, .btn-white {
  padding: 12px 28px;
  border-radius: 50px;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.3s ease;
  text-decoration: none;
  display: inline-block;
  border: none;
}

.btn-primary {
  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
  color: white;
  box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3);
}

.btn-primary:hover {
  background: linear-gradient(135deg, #1d4ed8 0%, #1e40af 100%);
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(37, 99, 235, 0.4);
}

.btn-secondary {
  background: transparent;
  color: #2563eb;
  border: 2px solid #2563eb;
}

.btn-secondary:hover {
  background: #2563eb;
  color: white;
  box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3);
}

.btn-white {
  background: white;
  color: #2563eb;
  font-size: 18px;
  padding: 16px 40px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.btn-white:hover {
  background: #f8fafc;
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

/* 
HERO SECTION REQUIREMENTS:
- Full viewport height layout
- Flexbox for content alignment
- Gradient backgrounds
- Typography hierarchy
- Responsive image/graphic handling

TOPICS TO UNDERSTAND:
- Viewport units (vh)
- Flexbox for vertical centering
- CSS gradients
- Typography scaling
- Responsive image techniques
- CSS transforms for effects
*/
/* Hero Section */
.hero {
  min-height: 100vh;
  display: flex;
  align-items: center;
  padding-top: 120px;
  padding-bottom: 80px;
  background: linear-gradient(135deg, #f8f9ff 0%, #fff 100%);
  position: relative;
}

.hero-background {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url('assets/images/hero-travel.jpg');
  background-size: cover;
  background-position: center;
  opacity: 0.1;
  z-index: 0;
}

.hero-content {
  display: flex;
  gap: 60px;
  justify-content: space-between;
  align-items: center;
  position: relative;
  z-index: 1;
}

.hero-text {
  flex: 1;
}

.hero-text h1 {
  font-size: 56px;
  font-weight: 900;
  margin-bottom: 24px;
  color: #1a202c;
}

.hero-image {
  width: 50%;
  max-width: 500px;
}

.hero-image img {
  width: 100%;
  height: auto;
  border-radius: 20px;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
}

.hero-text .highlight {
  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.hero-text p {
  font-size: 20px;
  color: #4a5568;
  margin-bottom: 32px;
  line-height: 1.6;
}

.hero-buttons {
  display: flex;
  gap: 16px;
}


/* 
STATS SECTION REQUIREMENTS:
- CSS Grid for statistics layout
- High contrast color scheme
- Hover effects for interactivity
- Typography emphasis for numbers
- Responsive grid behavior

TOPICS TO UNDERSTAND:
- CSS Grid layout
- Color contrast and accessibility
- CSS transforms for hover effects
- Typography hierarchy
- Responsive grid patterns
- Data visualization principles
*/
/* Stats Section */
.stats {
  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
  padding: 80px 0;
  position: relative;
  overflow: hidden;
}

.stats::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  opacity: 0.3;
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 40px;
}

.stat-item {
  text-align: center;
  color: white;
  transition: transform 0.3s ease;
  position: relative;
  z-index: 1;
}

.stat-item:hover {
  transform: translateY(-5px);
}

.stat-number {
  font-size: 48px;
  font-weight: 900;
  margin-bottom: 8px;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.stat-label {
  font-size: 16px;
  opacity: 0.9;
}

/* 
FEATURES SECTION REQUIREMENTS:
- CSS Grid for feature card layout
- Card design with hover effects
- Icon integration
- Consistent spacing and typography
- Responsive grid behavior

TOPICS TO UNDERSTAND:
- CSS Grid for card layouts
- Card design patterns
- CSS transforms and hover states
- Icon usage and styling
- Responsive design patterns
- Content organization principles
*/
/* Features Section */
.features {
  padding: 120px 0;
  background: white;
}

.section-header {
  text-align: center;
  margin-bottom: 80px;
}

.section-tag {
  color: #2563eb;
  font-weight: 700;
  font-size: 14px;
  letter-spacing: 2px;
  text-transform: uppercase;
  margin-bottom: 16px;
}

.section-title {
  font-size: 48px;
  font-weight: 900;
  color: #1a202c;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 40px;
}

.feature-card {
  text-align: center;
  padding: 40px 24px;
  border-radius: 20px;
  background: linear-gradient(145deg, #f8fafc 0%, #f1f5f9 100%);
  transition: all 0.3s ease;
  border: 1px solid rgba(37, 99, 235, 0.1);
  position: relative;
  overflow: hidden;
}

.feature-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(90deg, #2563eb 0%, #f59e0b 100%);
}

.feature-card:hover {
  transform: translateY(-10px) scale(1.02);
  background: linear-gradient(145deg, #f0f9ff 0%, #e0f2fe 100%);
  box-shadow: 0 20px 40px rgba(37, 99, 235, 0.15);
  border-color: rgba(37, 99, 235, 0.2);
}

.feature-icon {
  font-size: 32px;
  margin-bottom: 24px;
}

.feature-card h3 {
  font-size: 24px;
  margin-bottom: 12px;
  color: #1a202c;
}

.feature-card p {
  color: #4a5568;
  line-height: 1.6;
}

/* 
PRICING SECTION REQUIREMENTS:
- CSS Grid for pricing card layout
- Featured card styling with special treatment
- List styling with custom checkmarks
- Button styling within cards
- Responsive grid behavior

TOPICS TO UNDERSTAND:
- CSS Grid for pricing layouts
- Featured state styling
- CSS pseudo-elements for custom bullets
- Card design with featured states
- Button styling within components
- Pricing presentation patterns
*/
/* Pricing Section */
.pricing {
  padding: 120px 0;
  background: linear-gradient(135deg, #f8f9ff 0%, #fff 100%);
}

.pricing-cards {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 40px;
  margin-top: 60px;
}

.pricing-card {
  background: white;
  padding: 48px;
  border-radius: 20px;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.pricing-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
}

.pricing-card.featured {
  background: linear-gradient(145deg, #2563eb 0%, #1d4ed8 100%);
  color: white;
  transform: scale(1.05);
  box-shadow: 0 25px 50px rgba(37, 99, 235, 0.3);
}

.pricing-card.featured:hover {
  transform: translateY(-10px) scale(1.05);
}

.pricing-badge {
  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
  color: white;
  padding: 6px 16px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 700;
  margin-bottom: 16px;
  display: inline-block;
  box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);
}

.pricing-name {
  font-size: 28px;
  font-weight: 900;
  margin-bottom: 16px;
}

.pricing-price {
  font-size: 56px;
  font-weight: 900;
  margin-bottom: 8px;
}

.pricing-period {
  font-size: 16px;
  opacity: 0.7;
  margin-bottom: 32px;
}

.pricing-features {
  list-style: none;
  margin-bottom: 32px;
}

.pricing-features li {
  padding: 12px 0;
  display: flex;
  align-items: center;
  gap: 12px;
}

.pricing-features li::before {
  content: "✓";
  width: 24px;
  height: 24px;
  background: rgba(37, 99, 235, 0.2);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  flex-shrink: 0;
}

.pricing-button {
  width: 100%;
  padding: 16px;
  border-radius: 50px;
  border: none;
  font-weight: 700;
  font-size: 16px;
  cursor: pointer;
  transition: all 0.3s ease;
  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
  color: white;
  box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3);
}

.pricing-button:hover {
  background: linear-gradient(135deg, #1d4ed8 0%, #1e40af 100%);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(37, 99, 235, 0.4);
}

.pricing-card.featured .pricing-button {
  background: white;
  color: #2563eb;
  box-shadow: 0 4px 15px rgba(255, 255, 255, 0.3);
}

.pricing-card.featured .pricing-button:hover {
  background: #f8fafc;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(255, 255, 255, 0.4);
}

.pricing-card.featured .pricing-features li::before {
  background: rgba(255, 255, 255, 0.3);
}

/* 
CALL-TO-ACTION (CTA) SECTION REQUIREMENTS:
- Centered layout with gradient background
- High contrast text and button styling
- Typography hierarchy for emphasis
- Button prominence and hover effects
- Full-width section styling

TOPICS TO UNDERSTAND:
- Centered layout techniques
- Gradient backgrounds
- High contrast design
- Call-to-action design principles
- Button prominence techniques
- Conversion optimization patterns
*/
/* CTA Section */
.cta {
  padding: 120px 0;
  text-align: center;
  color: white;
  position: relative;
  overflow: hidden;
}

.cta-background {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url('assets/images/cta-travel.jpg');
  background-size: cover;
  background-position: center;
  z-index: 0;
}

.cta-background::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(37, 99, 235, 0.7);
  z-index: 1;
}

.cta-content {
  position: relative;
  z-index: 2;
}

.cta h2 {
  font-size: 48px;
  font-weight: 900;
  margin-bottom: 24px;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.cta p {
  font-size: 20px;
  opacity: 0.9;
  max-width: 600px;
  margin: 0 auto 40px;
}


/* 
FOOTER SECTION REQUIREMENTS:
- Multi-column CSS Grid layout
- Dark theme color scheme
- Link organization and styling
- Brand presentation
- Copyright information styling

TOPICS TO UNDERSTAND:
- CSS Grid for multi-column layouts
- Dark theme design
- Link styling and hover effects
- Footer design patterns
- Brand presentation techniques
- Site-wide navigation styling
*/
/* Footer */
footer {
  background: #1a202c;
  color: white;
  padding: 60px 0;
}

.footer-content {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 1fr;
  gap: 40px;
  margin-bottom: 40px;
}

.footer-brand {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.footer-brand h3 {
  font-size: 24px;
  margin-bottom: 16px;
  background: linear-gradient(135deg, #2563eb 0%, #f59e0b 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.footer-brand p {
  color: #a0aec0;
  line-height: 1.6;
}

.footer-links h4 {
  font-size: 18px;
  margin-bottom: 20px;
  color: #cbd5e0;
}

.footer-links a {
  display: block;
  color: #a0aec0;
  text-decoration: none;
  margin-bottom: 12px;
  transition: color 0.3s ease, transform 0.3s ease;
}

.footer-links a:hover {
  color: #2563eb;
  transform: translateX(5px);
}

.footer-bottom {
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  padding-top: 30px;
  text-align: center;
  color: #a0aec0;
}

/* 
RESPONSIVE DESIGN REQUIREMENTS:
- Mobile-first responsive breakpoints
- CSS Grid responsive behavior
- Navigation mobile menu activation
- Typography scaling for mobile
- Layout adjustments for different screen sizes

TOPICS TO UNDERSTAND:
- Media queries and breakpoints
- Mobile-first design approach
- Responsive CSS Grid
- Mobile navigation patterns
- Typography scaling
- Responsive design principles
*/
/* Responsive */
@media (max-width: 968px) {
  .nav-links {
    display: none;
  }

  .stats-grid {
    grid-template-columns: repeat(2, 1fr);
  }

  .features-grid {
    grid-template-columns: repeat(2, 1fr);
  }

  .curriculum-content {
    grid-template-columns: 1fr;
  }

  .testimonials-grid {
    grid-template-columns: 1fr;
  }

  .pricing-cards {
    grid-template-columns: 1fr;
  }

  .footer-content {
    grid-template-columns: 1fr 1fr;
  }

  .hero-content {
    flex-direction: column;
    text-align: center;
  }

  .hero-image {
    width: 80%;
    max-width: 300px;
  }

  .hero-image img {
    border-radius: 15px;
  }

  .hero-buttons {
    justify-content: center;
  }
}

@media (max-width: 640px) {
  .hero-text h1 {
    font-size: 36px;
  }

  .section-title {
    font-size: 32px;
  }

  .curriculum-text h2 {
    font-size: 32px;
  }

  .hero-buttons {
    flex-direction: column;
    width: 100%;
  }

  .hero-buttons button {
    width: 100%;
  }

  .stats-grid {
    grid-template-columns: 1fr;
    gap: 30px;
  }

  .features-grid {
    grid-template-columns: 1fr;
  }

  .footer-content {
    grid-template-columns: 1fr;
  }

  .cta h2 {
    font-size: 32px;
  }

  .pricing-price {
    font-size: 40px;
  }
}
